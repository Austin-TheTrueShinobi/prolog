Script started on Fri Apr 29 15:48:47 2022
[1m[7m%[27m[1m[0m                                                                                          ]2;abriley@MM236208-PC:~/Desktop]1;~/Desktop[0m[27m[24m[J[01;32m➜  [36mDesktop[00m [K[?1h=[?2004hoocaml[?1l>[?2004l
]2;ocaml]1;ocaml        OCaml version 4.11.1

# #cd "/user    Users/abriley/Desktop";;
# #use : "sde2.caml";;
val check_index_with_current_list : int list * int -> int = <fun>
val first_duplicate : int list -> int = <fun>
val find_nonrepeating : int list * int * int list -> int = <fun>
val first_nonrepeating : int list -> int = <fun>
val check_first_index_with_current_list : int list * int * int -> bool =
  <fun>
val sumOfTwo : int list * int list * int -> bool = <fun>
val check_first_index_with_current_list_cyk :
  int * int * (int * int) list -> (int * int) list = <fun>
val cyk_sublists : int -> (int * int) list = <fun>
# first_duplicate [1;2;3;4;5;6;7;4;5;8;9];;
- : int = 4
# first_duplicate [1;2;3;4;5;6;7;4;5;2;9];;
- : int = 2
# first_nonrepeating [1;2;3;2;7;5;6;1;3];;
- : int = 7
# first_nonrepeating [1;2;3;4;5;1;2;3;4;5];;
- : int = -10000
# sumOfTwo([1;2;3],[10;20;30;40],42);;
- : bool = true
# sumOfTwo([1;2;3],[10;20;30;40],40);;
- : bool = false
# cyk_sublists 4;;
- : (int * int) list = [(1, 3); (2, 2); (3, 1)]
# cyk_sublists 5;;
- : (int * int) list = [(1, 4); (2, 3); (3, 2); (4, 1)]
# 